:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/blazium-engine/blazium/tree/4.3/doc/tools/make_rst.py.
.. XML source: https://github.com/blazium-engine/blazium/tree/4.3/modules/blazium_sdk/doc_classes/AuthoritativeClient.xml.

.. _class_AuthoritativeClient:

AuthoritativeClient
===================

**Inherits:** :ref:`BlaziumClient<class_BlaziumClient>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

Node for connecting to the Blazium Lobby service. Offers authoritative lobby making features.

.. rst-class:: classref-introduction-group

Description
-----------

The **AuthoritativeClient** node provides an interface for connecting to the Blazium Authoritative service. There is a free instance hosted on the `blazium.app <https://blazium.app>`__ domain that is used by default.

The normal flow is as follows:

1. Listen to all the signals you are interested in.

2. Connect to the server using :ref:`connect_to_lobby<class_AuthoritativeClient_method_connect_to_lobby>` method.

3. Call any other methods to create, view or join lobbies, as well as add data to them.

4. Close the session using :ref:`disconnect_from_lobby<class_AuthoritativeClient_method_disconnect_from_lobby>` method at the end of the game.

\ **Note:** Some methods are non blocking and can be awaited in order to get the result.

There are also members on this class that are automatically updated as the lobby gets updated, such as:

- :ref:`peer<class_AuthoritativeClient_property_peer>`: The current peer. Reflects changes to the self peer.

- :ref:`peers<class_AuthoritativeClient_property_peers>`: The lobby peers. Reflects changes to all peers.

- :ref:`lobby<class_AuthoritativeClient_property_lobby>`: The lobby. Reflects changes to the lobby.

.. rst-class:: classref-reftable-group

Properties
----------

.. table::
   :widths: auto

   +----------------------------------------------------------------+----------------------------------------------------------------------------------+-------------------------------------------+
   | :ref:`bool<class_bool>`                                        | :ref:`connected<class_AuthoritativeClient_property_connected>`                   | ``false``                                 |
   +----------------------------------------------------------------+----------------------------------------------------------------------------------+-------------------------------------------+
   | :ref:`String<class_String>`                                    | :ref:`game_id<class_AuthoritativeClient_property_game_id>`                       | ``""``                                    |
   +----------------------------------------------------------------+----------------------------------------------------------------------------------+-------------------------------------------+
   | :ref:`LobbyInfo<class_LobbyInfo>`                              | :ref:`lobby<class_AuthoritativeClient_property_lobby>`                           |                                           |
   +----------------------------------------------------------------+----------------------------------------------------------------------------------+-------------------------------------------+
   | :ref:`LobbyPeer<class_LobbyPeer>`                              | :ref:`peer<class_AuthoritativeClient_property_peer>`                             |                                           |
   +----------------------------------------------------------------+----------------------------------------------------------------------------------+-------------------------------------------+
   | :ref:`Array<class_Array>`\[:ref:`LobbyPeer<class_LobbyPeer>`\] | :ref:`peers<class_AuthoritativeClient_property_peers>`                           | ``[]``                                    |
   +----------------------------------------------------------------+----------------------------------------------------------------------------------+-------------------------------------------+
   | :ref:`String<class_String>`                                    | :ref:`reconnection_token<class_AuthoritativeClient_property_reconnection_token>` | ``""``                                    |
   +----------------------------------------------------------------+----------------------------------------------------------------------------------+-------------------------------------------+
   | :ref:`String<class_String>`                                    | :ref:`server_url<class_AuthoritativeClient_property_server_url>`                 | ``"wss://authlobby.blazium.app/connect"`` |
   +----------------------------------------------------------------+----------------------------------------------------------------------------------+-------------------------------------------+

.. rst-class:: classref-reftable-group

Methods
-------

.. table::
   :widths: auto

   +-----------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`LobbyResponse<class_LobbyResponse>`                 | :ref:`add_lobby_tags<class_AuthoritativeClient_method_add_lobby_tags>`\ (\ tags\: :ref:`Dictionary<class_Dictionary>`\ )                                                                                                                             |
   +-----------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`                                   | :ref:`connect_to_lobby<class_AuthoritativeClient_method_connect_to_lobby>`\ (\ )                                                                                                                                                                     |
   +-----------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`ViewLobbyResponse<class_ViewLobbyResponse>`         | :ref:`create_lobby<class_AuthoritativeClient_method_create_lobby>`\ (\ title\: :ref:`String<class_String>`, tags\: :ref:`Dictionary<class_Dictionary>` = {}, max_players\: :ref:`int<class_int>` = 4, password\: :ref:`String<class_String>` = ""\ ) |
   +-----------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`LobbyResponse<class_LobbyResponse>`                 | :ref:`del_lobby_tags<class_AuthoritativeClient_method_del_lobby_tags>`\ (\ keys\: :ref:`Array<class_Array>`\[:ref:`String<class_String>`\]\ )                                                                                                        |
   +-----------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                    | :ref:`disconnect_from_lobby<class_AuthoritativeClient_method_disconnect_from_lobby>`\ (\ )                                                                                                                                                           |
   +-----------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`                                   | :ref:`is_host<class_AuthoritativeClient_method_is_host>`\ (\ )                                                                                                                                                                                       |
   +-----------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`ViewLobbyResponse<class_ViewLobbyResponse>`         | :ref:`join_lobby<class_AuthoritativeClient_method_join_lobby>`\ (\ lobby_id\: :ref:`String<class_String>`, password\: :ref:`String<class_String>` = ""\ )                                                                                            |
   +-----------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`LobbyResponse<class_LobbyResponse>`                 | :ref:`kick_peer<class_AuthoritativeClient_method_kick_peer>`\ (\ peer_id\: :ref:`String<class_String>`\ )                                                                                                                                            |
   +-----------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`LobbyResponse<class_LobbyResponse>`                 | :ref:`leave_lobby<class_AuthoritativeClient_method_leave_lobby>`\ (\ )                                                                                                                                                                               |
   +-----------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`ListLobbyResponse<class_ListLobbyResponse>`         | :ref:`list_lobbies<class_AuthoritativeClient_method_list_lobbies>`\ (\ tags\: :ref:`Dictionary<class_Dictionary>` = {}, start\: :ref:`int<class_int>` = 0, count\: :ref:`int<class_int>` = 10\ )                                                     |
   +-----------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`AuthoritativeResponse<class_AuthoritativeResponse>` | :ref:`lobby_call<class_AuthoritativeClient_method_lobby_call>`\ (\ method\: :ref:`String<class_String>`, args\: :ref:`Array<class_Array>`\ )                                                                                                         |
   +-----------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`LobbyResponse<class_LobbyResponse>`                 | :ref:`send_chat_message<class_AuthoritativeClient_method_send_chat_message>`\ (\ chat_message\: :ref:`String<class_String>`\ )                                                                                                                       |
   +-----------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`LobbyResponse<class_LobbyResponse>`                 | :ref:`set_lobby_ready<class_AuthoritativeClient_method_set_lobby_ready>`\ (\ ready\: :ref:`bool<class_bool>`\ )                                                                                                                                      |
   +-----------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`LobbyResponse<class_LobbyResponse>`                 | :ref:`set_lobby_sealed<class_AuthoritativeClient_method_set_lobby_sealed>`\ (\ seal\: :ref:`bool<class_bool>`\ )                                                                                                                                     |
   +-----------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`LobbyResponse<class_LobbyResponse>`                 | :ref:`set_peer_name<class_AuthoritativeClient_method_set_peer_name>`\ (\ peer_name\: :ref:`String<class_String>`\ )                                                                                                                                  |
   +-----------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`ViewLobbyResponse<class_ViewLobbyResponse>`         | :ref:`view_lobby<class_AuthoritativeClient_method_view_lobby>`\ (\ lobby_id\: :ref:`String<class_String>` = "", password\: :ref:`String<class_String>` = ""\ )                                                                                       |
   +-----------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Signals
-------

.. _class_AuthoritativeClient_signal_connected_to_lobby:

.. rst-class:: classref-signal

**connected_to_lobby**\ (\ peer\: :ref:`LobbyPeer<class_LobbyPeer>`, reconnection_token\: :ref:`String<class_String>`\ ) :ref:`🔗<class_AuthoritativeClient_signal_connected_to_lobby>`

Signal generated after you connect to the lobby.

.. rst-class:: classref-item-separator

----

.. _class_AuthoritativeClient_signal_disconnected_from_lobby:

.. rst-class:: classref-signal

**disconnected_from_lobby**\ (\ reason\: :ref:`String<class_String>`\ ) :ref:`🔗<class_AuthoritativeClient_signal_disconnected_from_lobby>`

Signal generated after you disconnect from the lobby.

.. rst-class:: classref-item-separator

----

.. _class_AuthoritativeClient_signal_lobby_created:

.. rst-class:: classref-signal

**lobby_created**\ (\ lobby\: :ref:`LobbyInfo<class_LobbyInfo>`, peers\: :ref:`Array<class_Array>`\[:ref:`LobbyPeer<class_LobbyPeer>`\]\ ) :ref:`🔗<class_AuthoritativeClient_signal_lobby_created>`

Signal generated after a lobby is created.

.. rst-class:: classref-item-separator

----

.. _class_AuthoritativeClient_signal_lobby_joined:

.. rst-class:: classref-signal

**lobby_joined**\ (\ lobby\: :ref:`LobbyInfo<class_LobbyInfo>`, peers\: :ref:`Array<class_Array>`\[:ref:`LobbyPeer<class_LobbyPeer>`\]\ ) :ref:`🔗<class_AuthoritativeClient_signal_lobby_joined>`

Signal generated after you joint a lobby.

.. rst-class:: classref-item-separator

----

.. _class_AuthoritativeClient_signal_lobby_left:

.. rst-class:: classref-signal

**lobby_left**\ (\ kicked\: :ref:`bool<class_bool>`\ ) :ref:`🔗<class_AuthoritativeClient_signal_lobby_left>`

Signal generated after you leave a lobby.

.. rst-class:: classref-item-separator

----

.. _class_AuthoritativeClient_signal_lobby_notified:

.. rst-class:: classref-signal

**lobby_notified**\ (\ data\: :ref:`Object<class_Object>`, from_peer\: :ref:`LobbyPeer<class_LobbyPeer>`\ ) :ref:`🔗<class_AuthoritativeClient_signal_lobby_notified>`

Signal generated after a notification is received.

.. rst-class:: classref-item-separator

----

.. _class_AuthoritativeClient_signal_lobby_sealed:

.. rst-class:: classref-signal

**lobby_sealed**\ (\ sealed\: :ref:`bool<class_bool>`\ ) :ref:`🔗<class_AuthoritativeClient_signal_lobby_sealed>`

Signal generated after the host seals the lobby.

.. rst-class:: classref-item-separator

----

.. _class_AuthoritativeClient_signal_lobby_tagged:

.. rst-class:: classref-signal

**lobby_tagged**\ (\ tags\: :ref:`Dictionary<class_Dictionary>`\ ) :ref:`🔗<class_AuthoritativeClient_signal_lobby_tagged>`

Signal generated after the host updated the tags of the lobby

.. rst-class:: classref-item-separator

----

.. _class_AuthoritativeClient_signal_log_updated:

.. rst-class:: classref-signal

**log_updated**\ (\ command\: :ref:`String<class_String>`, logs\: :ref:`String<class_String>`\ ) :ref:`🔗<class_AuthoritativeClient_signal_log_updated>`

Signals a log from a command.

.. rst-class:: classref-item-separator

----

.. _class_AuthoritativeClient_signal_peer_disconnected:

.. rst-class:: classref-signal

**peer_disconnected**\ (\ peer\: :ref:`LobbyPeer<class_LobbyPeer>`\ ) :ref:`🔗<class_AuthoritativeClient_signal_peer_disconnected>`

Signal generated after a peer disconnects. If they don't reconnect they will be removed.

.. rst-class:: classref-item-separator

----

.. _class_AuthoritativeClient_signal_peer_joined:

.. rst-class:: classref-signal

**peer_joined**\ (\ peer\: :ref:`LobbyPeer<class_LobbyPeer>`\ ) :ref:`🔗<class_AuthoritativeClient_signal_peer_joined>`

Signal generated after a peer joins the lobby.

.. rst-class:: classref-item-separator

----

.. _class_AuthoritativeClient_signal_peer_left:

.. rst-class:: classref-signal

**peer_left**\ (\ peer\: :ref:`LobbyPeer<class_LobbyPeer>`, kicked\: :ref:`bool<class_bool>`\ ) :ref:`🔗<class_AuthoritativeClient_signal_peer_left>`

Signal generated after a peer leaves the lobby.

.. rst-class:: classref-item-separator

----

.. _class_AuthoritativeClient_signal_peer_messaged:

.. rst-class:: classref-signal

**peer_messaged**\ (\ peer\: :ref:`LobbyPeer<class_LobbyPeer>`, chat_message\: :ref:`String<class_String>`\ ) :ref:`🔗<class_AuthoritativeClient_signal_peer_messaged>`

Signal generated after a peer sends a chat message.

.. rst-class:: classref-item-separator

----

.. _class_AuthoritativeClient_signal_peer_named:

.. rst-class:: classref-signal

**peer_named**\ (\ peer\: :ref:`LobbyPeer<class_LobbyPeer>`\ ) :ref:`🔗<class_AuthoritativeClient_signal_peer_named>`

Signal generated after a peer names himself.

.. rst-class:: classref-item-separator

----

.. _class_AuthoritativeClient_signal_peer_ready:

.. rst-class:: classref-signal

**peer_ready**\ (\ peer\: :ref:`LobbyPeer<class_LobbyPeer>`, is_ready\: :ref:`bool<class_bool>`\ ) :ref:`🔗<class_AuthoritativeClient_signal_peer_ready>`

Signal generated after a peer is ready.

.. rst-class:: classref-item-separator

----

.. _class_AuthoritativeClient_signal_peer_reconnected:

.. rst-class:: classref-signal

**peer_reconnected**\ (\ peer\: :ref:`LobbyPeer<class_LobbyPeer>`\ ) :ref:`🔗<class_AuthoritativeClient_signal_peer_reconnected>`

Signal generated after a peer reconnects.

.. rst-class:: classref-item-separator

----

.. _class_AuthoritativeClient_signal_received_lobby_data:

.. rst-class:: classref-signal

**received_lobby_data**\ (\ data\: :ref:`Object<class_Object>`\ ) :ref:`🔗<class_AuthoritativeClient_signal_received_lobby_data>`

Signal generated after data is sent to the lobby.

.. rst-class:: classref-item-separator

----

.. _class_AuthoritativeClient_signal_received_peer_data:

.. rst-class:: classref-signal

**received_peer_data**\ (\ data\: :ref:`Object<class_Object>`, to_peer\: :ref:`LobbyPeer<class_LobbyPeer>`\ ) :ref:`🔗<class_AuthoritativeClient_signal_received_peer_data>`

Signal generated after data is sent to peer.

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Property Descriptions
---------------------

.. _class_AuthoritativeClient_property_connected:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **connected** = ``false`` :ref:`🔗<class_AuthoritativeClient_property_connected>`

.. rst-class:: classref-property-setget

- :ref:`bool<class_bool>` **get_connected**\ (\ )

True if the client is connected, else false.

.. rst-class:: classref-item-separator

----

.. _class_AuthoritativeClient_property_game_id:

.. rst-class:: classref-property

:ref:`String<class_String>` **game_id** = ``""`` :ref:`🔗<class_AuthoritativeClient_property_game_id>`

.. rst-class:: classref-property-setget

- |void| **set_game_id**\ (\ value\: :ref:`String<class_String>`\ )
- :ref:`String<class_String>` **get_game_id**\ (\ )

The game id.

.. rst-class:: classref-item-separator

----

.. _class_AuthoritativeClient_property_lobby:

.. rst-class:: classref-property

:ref:`LobbyInfo<class_LobbyInfo>` **lobby** :ref:`🔗<class_AuthoritativeClient_property_lobby>`

.. rst-class:: classref-property-setget

- :ref:`LobbyInfo<class_LobbyInfo>` **get_lobby**\ (\ )

The current lobby. Reflects changes to the lobby.

.. rst-class:: classref-item-separator

----

.. _class_AuthoritativeClient_property_peer:

.. rst-class:: classref-property

:ref:`LobbyPeer<class_LobbyPeer>` **peer** :ref:`🔗<class_AuthoritativeClient_property_peer>`

.. rst-class:: classref-property-setget

- :ref:`LobbyPeer<class_LobbyPeer>` **get_peer**\ (\ )

The current peer. Reflects changes to the self peer.

.. rst-class:: classref-item-separator

----

.. _class_AuthoritativeClient_property_peers:

.. rst-class:: classref-property

:ref:`Array<class_Array>`\[:ref:`LobbyPeer<class_LobbyPeer>`\] **peers** = ``[]`` :ref:`🔗<class_AuthoritativeClient_property_peers>`

.. rst-class:: classref-property-setget

- :ref:`Array<class_Array>`\[:ref:`LobbyPeer<class_LobbyPeer>`\] **get_peers**\ (\ )

The lobby peers. Reflects changes to all peers.

.. rst-class:: classref-item-separator

----

.. _class_AuthoritativeClient_property_reconnection_token:

.. rst-class:: classref-property

:ref:`String<class_String>` **reconnection_token** = ``""`` :ref:`🔗<class_AuthoritativeClient_property_reconnection_token>`

.. rst-class:: classref-property-setget

- |void| **set_reconnection_token**\ (\ value\: :ref:`String<class_String>`\ )
- :ref:`String<class_String>` **get_reconnection_token**\ (\ )

Reconnection token.

.. rst-class:: classref-item-separator

----

.. _class_AuthoritativeClient_property_server_url:

.. rst-class:: classref-property

:ref:`String<class_String>` **server_url** = ``"wss://authlobby.blazium.app/connect"`` :ref:`🔗<class_AuthoritativeClient_property_server_url>`

.. rst-class:: classref-property-setget

- |void| **set_server_url**\ (\ value\: :ref:`String<class_String>`\ )
- :ref:`String<class_String>` **get_server_url**\ (\ )

Set to what url this lobby should connect to.

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Method Descriptions
-------------------

.. _class_AuthoritativeClient_method_add_lobby_tags:

.. rst-class:: classref-method

:ref:`LobbyResponse<class_LobbyResponse>` **add_lobby_tags**\ (\ tags\: :ref:`Dictionary<class_Dictionary>`\ ) :ref:`🔗<class_AuthoritativeClient_method_add_lobby_tags>`

Add tags to the lobby. Only works if you are host.

Returns a :ref:`LobbyResponse<class_LobbyResponse>` object that has a :ref:`LobbyResponse.finished<class_LobbyResponse_signal_finished>` signal that is emitted when finished.

Generates :ref:`lobby_tagged<class_AuthoritativeClient_signal_lobby_tagged>`.

.. rst-class:: classref-item-separator

----

.. _class_AuthoritativeClient_method_connect_to_lobby:

.. rst-class:: classref-method

:ref:`bool<class_bool>` **connect_to_lobby**\ (\ ) :ref:`🔗<class_AuthoritativeClient_method_connect_to_lobby>`

Connect to a Blazium Lobby Server using the :ref:`game_id<class_AuthoritativeClient_property_game_id>` and :ref:`server_url<class_AuthoritativeClient_property_server_url>`.

Generates :ref:`connected_to_lobby<class_AuthoritativeClient_signal_connected_to_lobby>` signal if successful.

.. rst-class:: classref-item-separator

----

.. _class_AuthoritativeClient_method_create_lobby:

.. rst-class:: classref-method

:ref:`ViewLobbyResponse<class_ViewLobbyResponse>` **create_lobby**\ (\ title\: :ref:`String<class_String>`, tags\: :ref:`Dictionary<class_Dictionary>` = {}, max_players\: :ref:`int<class_int>` = 4, password\: :ref:`String<class_String>` = ""\ ) :ref:`🔗<class_AuthoritativeClient_method_create_lobby>`

Create a lobby and become host. If you are already in a lobby, you cannot create one. You need to leave first.

The new lobby can have a title, tags, max players and password. 0 max players means unlimited.

Returns a :ref:`ViewLobbyResponse<class_ViewLobbyResponse>` object that has a :ref:`ViewLobbyResponse.finished<class_ViewLobbyResponse_signal_finished>` signal that is emitted when finished.

Generates :ref:`lobby_created<class_AuthoritativeClient_signal_lobby_created>` signal.

.. rst-class:: classref-item-separator

----

.. _class_AuthoritativeClient_method_del_lobby_tags:

.. rst-class:: classref-method

:ref:`LobbyResponse<class_LobbyResponse>` **del_lobby_tags**\ (\ keys\: :ref:`Array<class_Array>`\[:ref:`String<class_String>`\]\ ) :ref:`🔗<class_AuthoritativeClient_method_del_lobby_tags>`

Delete one or more keys from the lobby tags. Only works if you are host.

Returns a :ref:`LobbyResponse<class_LobbyResponse>` object that has a :ref:`LobbyResponse.finished<class_LobbyResponse_signal_finished>` signal that is emitted when finished.

Generates :ref:`lobby_tagged<class_AuthoritativeClient_signal_lobby_tagged>`.

.. rst-class:: classref-item-separator

----

.. _class_AuthoritativeClient_method_disconnect_from_lobby:

.. rst-class:: classref-method

|void| **disconnect_from_lobby**\ (\ ) :ref:`🔗<class_AuthoritativeClient_method_disconnect_from_lobby>`

Disconnect from the lobby server.

Generates :ref:`disconnected_from_lobby<class_AuthoritativeClient_signal_disconnected_from_lobby>` signal.

.. rst-class:: classref-item-separator

----

.. _class_AuthoritativeClient_method_is_host:

.. rst-class:: classref-method

:ref:`bool<class_bool>` **is_host**\ (\ ) :ref:`🔗<class_AuthoritativeClient_method_is_host>`

Returns true if you are the host of the current lobby.

.. rst-class:: classref-item-separator

----

.. _class_AuthoritativeClient_method_join_lobby:

.. rst-class:: classref-method

:ref:`ViewLobbyResponse<class_ViewLobbyResponse>` **join_lobby**\ (\ lobby_id\: :ref:`String<class_String>`, password\: :ref:`String<class_String>` = ""\ ) :ref:`🔗<class_AuthoritativeClient_method_join_lobby>`

Join a lobby. If you are already in a lobby, you cannot join another one. You need to leave first.

If the lobby you want to join is password protected, you need to provide the password.

Returns a :ref:`ViewLobbyResponse<class_ViewLobbyResponse>` object that has a :ref:`ViewLobbyResponse.finished<class_ViewLobbyResponse_signal_finished>` signal that is emitted when finished.

Generates :ref:`lobby_joined<class_AuthoritativeClient_signal_lobby_joined>`.

.. rst-class:: classref-item-separator

----

.. _class_AuthoritativeClient_method_kick_peer:

.. rst-class:: classref-method

:ref:`LobbyResponse<class_LobbyResponse>` **kick_peer**\ (\ peer_id\: :ref:`String<class_String>`\ ) :ref:`🔗<class_AuthoritativeClient_method_kick_peer>`

Kick a peer. You need to be host to do so.

Returns a :ref:`LobbyResponse<class_LobbyResponse>` object that has a :ref:`LobbyResponse.finished<class_LobbyResponse_signal_finished>` signal that is emitted when finished.

Generates :ref:`peer_left<class_AuthoritativeClient_signal_peer_left>` signal with kicked set to true.

.. rst-class:: classref-item-separator

----

.. _class_AuthoritativeClient_method_leave_lobby:

.. rst-class:: classref-method

:ref:`LobbyResponse<class_LobbyResponse>` **leave_lobby**\ (\ ) :ref:`🔗<class_AuthoritativeClient_method_leave_lobby>`

Leave a lobby. You need to be in a lobby to leave one.

Returns a :ref:`LobbyResponse<class_LobbyResponse>` object that has a :ref:`LobbyResponse.finished<class_LobbyResponse_signal_finished>` signal that is emitted when finished.

Generates :ref:`lobby_left<class_AuthoritativeClient_signal_lobby_left>`.

.. rst-class:: classref-item-separator

----

.. _class_AuthoritativeClient_method_list_lobbies:

.. rst-class:: classref-method

:ref:`ListLobbyResponse<class_ListLobbyResponse>` **list_lobbies**\ (\ tags\: :ref:`Dictionary<class_Dictionary>` = {}, start\: :ref:`int<class_int>` = 0, count\: :ref:`int<class_int>` = 10\ ) :ref:`🔗<class_AuthoritativeClient_method_list_lobbies>`

Lists all lobbies. Lobbies that are sealed won't show in the list, except if you disconnected and trying to reconnect to a lobby.

.. rst-class:: classref-item-separator

----

.. _class_AuthoritativeClient_method_lobby_call:

.. rst-class:: classref-method

:ref:`AuthoritativeResponse<class_AuthoritativeResponse>` **lobby_call**\ (\ method\: :ref:`String<class_String>`, args\: :ref:`Array<class_Array>`\ ) :ref:`🔗<class_AuthoritativeClient_method_lobby_call>`

Call a method on the server.

.. rst-class:: classref-item-separator

----

.. _class_AuthoritativeClient_method_send_chat_message:

.. rst-class:: classref-method

:ref:`LobbyResponse<class_LobbyResponse>` **send_chat_message**\ (\ chat_message\: :ref:`String<class_String>`\ ) :ref:`🔗<class_AuthoritativeClient_method_send_chat_message>`

Send a chat message. Only works if you are in a lobby.

Returns a :ref:`LobbyResponse<class_LobbyResponse>` object that has a :ref:`LobbyResponse.finished<class_LobbyResponse_signal_finished>` signal that is emitted when finished.

Generates :ref:`peer_messaged<class_AuthoritativeClient_signal_peer_messaged>`.

.. rst-class:: classref-item-separator

----

.. _class_AuthoritativeClient_method_set_lobby_ready:

.. rst-class:: classref-method

:ref:`LobbyResponse<class_LobbyResponse>` **set_lobby_ready**\ (\ ready\: :ref:`bool<class_bool>`\ ) :ref:`🔗<class_AuthoritativeClient_method_set_lobby_ready>`

Ready up in the lobby. You need to be in a lobby and unready to run this.

Returns a :ref:`LobbyResponse<class_LobbyResponse>` object that has a :ref:`LobbyResponse.finished<class_LobbyResponse_signal_finished>` signal that is emitted when finished.

Generates :ref:`peer_ready<class_AuthoritativeClient_signal_peer_ready>`.

.. rst-class:: classref-item-separator

----

.. _class_AuthoritativeClient_method_set_lobby_sealed:

.. rst-class:: classref-method

:ref:`LobbyResponse<class_LobbyResponse>` **set_lobby_sealed**\ (\ seal\: :ref:`bool<class_bool>`\ ) :ref:`🔗<class_AuthoritativeClient_method_set_lobby_sealed>`

Seals the lobby. You need to be the host to do this and the lobby needs to be unsealed.

Returns a :ref:`LobbyResponse<class_LobbyResponse>` object that has a :ref:`LobbyResponse.finished<class_LobbyResponse_signal_finished>` signal that is emitted when finished.

Generates :ref:`lobby_sealed<class_AuthoritativeClient_signal_lobby_sealed>`.

.. rst-class:: classref-item-separator

----

.. _class_AuthoritativeClient_method_set_peer_name:

.. rst-class:: classref-method

:ref:`LobbyResponse<class_LobbyResponse>` **set_peer_name**\ (\ peer_name\: :ref:`String<class_String>`\ ) :ref:`🔗<class_AuthoritativeClient_method_set_peer_name>`

Set your peer name.

Returns a :ref:`LobbyResponse<class_LobbyResponse>` object that has a :ref:`LobbyResponse.finished<class_LobbyResponse_signal_finished>` signal that is emitted when finished.

Generates :ref:`peer_named<class_AuthoritativeClient_signal_peer_named>` signal if you are in lobby.

.. rst-class:: classref-item-separator

----

.. _class_AuthoritativeClient_method_view_lobby:

.. rst-class:: classref-method

:ref:`ViewLobbyResponse<class_ViewLobbyResponse>` **view_lobby**\ (\ lobby_id\: :ref:`String<class_String>` = "", password\: :ref:`String<class_String>` = ""\ ) :ref:`🔗<class_AuthoritativeClient_method_view_lobby>`

View data from a lobby. Returns lobby settings and peers.

Returns a :ref:`ViewLobbyResponse<class_ViewLobbyResponse>` object that has a :ref:`ViewLobbyResponse.finished<class_ViewLobbyResponse_signal_finished>` signal that is emitted when finished.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
.. |bitfield| replace:: :abbr:`BitField (This value is an integer composed as a bitmask of the following flags.)`
.. |void| replace:: :abbr:`void (No return value.)`
